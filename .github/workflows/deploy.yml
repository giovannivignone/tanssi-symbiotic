name: Deploy Contracts

on:
  workflow_dispatch:
    inputs:
      sha:
        description: full sha to deploy the contracts from
        required: true
      command:
        description: list of available commands to run
        required: true
        type: choice
        default: deploy-middleware
        options:
          - deploy-middleware
          - register-vault
          - deploy-vault
          - opt-in-by-network-to-vault
          - register-middleware-to-symbiotic

env:
  FOUNDRY_PROFILE: ci

jobs:
  deploy:
    strategy:
      fail-fast: true
    name: Contracts deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Show Forge version
        run: |
          forge --version

      - name: Install dependencies
        run: |
          make install-tanssi-relayer

      - name: Run Forge fmt
        run: |
          forge fmt --check
        id: fmt

      - name: Run Forge build
        run: |
          forge build --sizes
        id: build

      - name: Execute deployment command
        run: |
          if [[ ${{ github.event.inputs.command }} = "deploy-middleware" ]]; then
            echo " Deploying Tanssi Middleware contract..."
            forge script script/DeployTanssiEcosystem.sol:DeployTanssiEcosystem --rpc-url ${{ secrets.RPC_URL }} --private-key ${{ secrets.PRIVATE_KEY }} --broadcast
            echo " Tanssi Middleware contract deployment completed" 
          elif [[ ${{ github.event.inputs.command }} = "register-vault" ]]; then
            echo " Registering Tanssi vault..."
            forge script script/DeployTanssiEcosystem.s.sol:DeployTanssiEcosystem --rpc-url ${{ secrets.RPC_URL }} --private-key ${{ secrets.PRIVATE_KEY }} --broadcast 
            echo " Tanssi vault registration completed" 
          elif [[ ${{ github.event.inputs.command }} = "deploy-vault" ]]; then
            echo " Deploying Tanssi vaults..."
            forge script script/DeployTanssiEcosystem.s.sol:DeployTanssiEcosystem --rpc-url ${{ secrets.RPC_URL }} --private-key ${{ secrets.PRIVATE_KEY }} --broadcast --sig "deployVaults()"
            echo " Tanssi vaults deployment completed" 
          elif [[ ${{ github.event.inputs.command }} = "opt-in-by-network-to-vault" ]]; then
            echo " Opting in by Tanssi network to vault..."
            forge script script/DeployTanssiEcosystem.s.sol:DeployTanssiEcosystem --rpc-url ${{ secrets.RPC_URL }} --private-key ${{ secrets.PRIVATE_KEY }} --broadcast --sig "optInByNetworkToVault()"
            echo " Tanssi opted in to vault"
          elif [[ ${{ github.event.inputs.command }} = "register-middleware-to-symbiotic" ]]; then 
            echo " Registering Tanssi Middleware contract to Symbiotic..."
            forge script script/DeployTanssiEcosystem.s.sol:DeployTanssiEcosystem --rpc-url ${{ secrets.RPC_URL }} --private-key ${{ secrets.PRIVATE_KEY }} --broadcast --sig "registerMiddlewareToSymbiotic()"
            echo " Tanssi Middleware contract registration completed" 
          fi